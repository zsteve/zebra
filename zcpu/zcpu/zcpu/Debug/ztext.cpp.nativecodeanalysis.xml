<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>87</LINE><COLUMN>55</COLUMN></SFA><DEFECTCODE>6386</DEFECTCODE><DESCRIPTION>Buffer overrun while writing to 'charArray':  the writable size is 'charVector.public: unsigned int __thiscall std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;::size(void)const ()*1' bytes, but '2' bytes might be written.</DESCRIPTION><FUNCTION>zCharStringtoZSCII</FUNCTION><DECORATED>?zCharStringtoZSCII@@YAPAEPAGAAVZMemory@@@Z</DECORATED><FUNCLINE>79</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>4</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>83</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>84</LINE><COLUMN>28</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>86</LINE><COLUMN>11</COLUMN><KEYEVENT><ID>1</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'charArray' is an array of 1 elements (1 bytes)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>87</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>87</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>2</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Enter this loop, (assume 'i&lt;charVector.size()')</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>87</LINE><COLUMN>55</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>87</LINE><COLUMN>39</COLUMN><KEYEVENT><ID>3</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'i' may equal 1</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>87</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>4</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Continue this loop, (assume 'i&lt;charVector.size()')</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>87</LINE><COLUMN>55</COLUMN><KEYEVENT><ID>5</ID><KIND>declaration</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'i' is an In/Out argument to 'std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;::[]' (declared at c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector:1135)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>87</LINE><COLUMN>55</COLUMN><KEYEVENT><ID>6</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>Invalid write to 'charArray[1]', (writable range is 0 to 0)</MESSAGE></KEYEVENT></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>105</LINE><COLUMN>19</COLUMN></SFA><DEFECTCODE>6386</DEFECTCODE><DESCRIPTION>Buffer overrun while writing to 'zCharArr':  the writable size is 'zCharVect.public: unsigned int __thiscall std::vector&lt;unsigned short,class std::allocator&lt;unsigned short&gt; &gt;::size(void)const ()*2' bytes, but '4' bytes might be written.</DESCRIPTION><FUNCTION>zCharStringtoZSCII</FUNCTION><DECORATED>?zCharStringtoZSCII@@YAPAEKAAVZMemory@@@Z</DECORATED><FUNCLINE>93</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>4</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>95</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>96</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>98</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>99</LINE><COLUMN>26</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>96</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>98</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>99</LINE><COLUMN>26</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>96</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>98</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>99</LINE><COLUMN>26</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>102</LINE><COLUMN>11</COLUMN><KEYEVENT><ID>1</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'zCharArr' is an array of 1 elements (2 bytes)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>103</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>103</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>2</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Enter this loop, (assume 'i&lt;zCharVect.size()')</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>105</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>103</LINE><COLUMN>38</COLUMN><KEYEVENT><ID>3</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'i' may equal 1</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>103</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>4</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Continue this loop, (assume 'i&lt;zCharVect.size()')</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>105</LINE><COLUMN>19</COLUMN><KEYEVENT><ID>5</ID><KIND>declaration</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'i' is an In/Out argument to 'std::vector&lt;unsigned short,std::allocator&lt;unsigned short&gt; &gt;::[]' (declared at c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector:1135)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>105</LINE><COLUMN>19</COLUMN><KEYEVENT><ID>6</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>Invalid write to 'zCharArr[1]', (writable range is 0 to 0)</MESSAGE></KEYEVENT></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>244</LINE><COLUMN>25</COLUMN></SFA><DEFECTCODE>6246</DEFECTCODE><DESCRIPTION>Local declaration of 'i' hides declaration of the same name in outer scope. For additional information, see previous declaration at line '152' of 'c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\ztext.cpp'.</DESCRIPTION><FUNCTION>zCharStringtoZSCIIHelper</FUNCTION><DECORATED>?zCharStringtoZSCIIHelper@@YAPAEPAEKAAVZMemory@@_N@Z</DECORATED><FUNCLINE>135</FUNCLINE><PATH><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>152</LINE><COLUMN>17</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>259</LINE><COLUMN>25</COLUMN></SFA><DEFECTCODE>6246</DEFECTCODE><DESCRIPTION>Local declaration of 'i' hides declaration of the same name in outer scope. For additional information, see previous declaration at line '152' of 'c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\ztext.cpp'.</DESCRIPTION><FUNCTION>zCharStringtoZSCIIHelper</FUNCTION><DECORATED>?zCharStringtoZSCIIHelper@@YAPAEPAEKAAVZMemory@@_N@Z</DECORATED><FUNCLINE>135</FUNCLINE><PATH><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>152</LINE><COLUMN>17</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>274</LINE><COLUMN>25</COLUMN></SFA><DEFECTCODE>6246</DEFECTCODE><DESCRIPTION>Local declaration of 'i' hides declaration of the same name in outer scope. For additional information, see previous declaration at line '152' of 'c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\ztext.cpp'.</DESCRIPTION><FUNCTION>zCharStringtoZSCIIHelper</FUNCTION><DECORATED>?zCharStringtoZSCIIHelper@@YAPAEPAEKAAVZMemory@@_N@Z</DECORATED><FUNCLINE>135</FUNCLINE><PATH><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>152</LINE><COLUMN>17</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>323</LINE><COLUMN>37</COLUMN></SFA><DEFECTCODE>6386</DEFECTCODE><DESCRIPTION>Buffer overrun while writing to 'outData':  the writable size is 'zsciiString.public: unsigned int __thiscall std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;::size(void)const ()*1' bytes, but '2' bytes might be written.</DESCRIPTION><FUNCTION>zCharStringtoZSCIIHelper</FUNCTION><DECORATED>?zCharStringtoZSCIIHelper@@YAPAEPAEKAAVZMemory@@_N@Z</DECORATED><FUNCLINE>135</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>4</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>142</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>143</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>144</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>151</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>152</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>152</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>152</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>320</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>321</LINE><COLUMN>11</COLUMN><KEYEVENT><ID>1</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'outData' is an array of 1 elements (1 bytes)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>322</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>323</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>323</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>2</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Enter this loop, (assume 'i&lt;j')</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>323</LINE><COLUMN>37</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>323</LINE><COLUMN>23</COLUMN><KEYEVENT><ID>3</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'i' may equal 1</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>323</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>4</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Continue this loop, (assume 'i&lt;j')</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>323</LINE><COLUMN>37</COLUMN><KEYEVENT><ID>5</ID><KIND>declaration</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'i' is an In/Out argument to 'std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;::[]' (declared at c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector:1135)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>323</LINE><COLUMN>37</COLUMN><KEYEVENT><ID>6</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>Invalid write to 'outData[1]', (writable range is 0 to 0)</MESSAGE></KEYEVENT></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>382</LINE><COLUMN>18</COLUMN></SFA><DEFECTCODE>6001</DEFECTCODE><DESCRIPTION>Using uninitialized memory 'outChar'.</DESCRIPTION><FUNCTION>getZCharAlphaShiftCharacter</FUNCTION><DECORATED>?getZCharAlphaShiftCharacter@@YAEHH_N@Z</DECORATED><FUNCLINE>361</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>3</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>367</LINE><COLUMN>10</COLUMN><KEYEVENT><ID>1</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'outChar' is not initialized</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>368</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>369</LINE><COLUMN>16</COLUMN><KEYEVENT><ID>2</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Skip this branch, (assume 'diff==-1||diff==2' is false)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>372</LINE><COLUMN>21</COLUMN><KEYEVENT><ID>3</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Skip this branch, (assume 'diff==1||diff==-2' is false)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>375</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>4</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Skip this branch, (assume 'zVersion&lt;3&amp;&amp;shiftLock==1' is false)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>380</LINE><COLUMN>15</COLUMN><KEYEVENT><ID>5</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Enter this branch, (assume 'zVersion&gt;=3')</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>382</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>6</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'outChar' is used, but may not have been initialized</MESSAGE></KEYEVENT></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>588</LINE><COLUMN>57</COLUMN></SFA><DEFECTCODE>6386</DEFECTCODE><DESCRIPTION>Buffer overrun while writing to 'zcharArray':  the writable size is 'vector2.public: unsigned int __thiscall std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;::size(void)const ()*1' bytes, but '2' bytes might be written.</DESCRIPTION><FUNCTION>zChartoDictionaryZCharString</FUNCTION><DECORATED>?zChartoDictionaryZCharString@@YAPAGPAG@Z</DECORATED><FUNCLINE>543</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>4</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>547</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>548</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>549</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>571</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>573</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>574</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>574</LINE><COLUMN>38</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>578</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>580</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>580</LINE><COLUMN>29</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>582</LINE><COLUMN>33</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>580</LINE><COLUMN>34</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>580</LINE><COLUMN>29</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>582</LINE><COLUMN>33</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>580</LINE><COLUMN>34</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>580</LINE><COLUMN>29</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>586</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>587</LINE><COLUMN>15</COLUMN><KEYEVENT><ID>1</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'zcharArray' is an array of 1 elements (1 bytes)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>588</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>588</LINE><COLUMN>22</COLUMN><KEYEVENT><ID>2</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Enter this loop, (assume 'i&lt;vector2.size()')</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>588</LINE><COLUMN>57</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>588</LINE><COLUMN>40</COLUMN><KEYEVENT><ID>3</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'i' may equal 1</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>588</LINE><COLUMN>22</COLUMN><KEYEVENT><ID>4</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Continue this loop, (assume 'i&lt;vector2.size()')</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>588</LINE><COLUMN>57</COLUMN><KEYEVENT><ID>5</ID><KIND>declaration</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'i' is an In/Out argument to 'std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;::[]' (declared at c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector:1135)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>588</LINE><COLUMN>57</COLUMN><KEYEVENT><ID>6</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>Invalid write to 'zcharArray[1]', (writable range is 0 to 0)</MESSAGE></KEYEVENT></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>628</LINE><COLUMN>19</COLUMN></SFA><DEFECTCODE>6386</DEFECTCODE><DESCRIPTION>Buffer overrun while writing to 'zCharArr':  the writable size is 'zCharVect.public: unsigned int __thiscall std::vector&lt;unsigned short,class std::allocator&lt;unsigned short&gt; &gt;::size(void)const ()*2' bytes, but '4' bytes might be written.</DESCRIPTION><FUNCTION>dictionaryZCharStringtoZCharString</FUNCTION><DECORATED>?dictionaryZCharStringtoZCharString@@YAPAGKAAVZMemory@@@Z</DECORATED><FUNCLINE>617</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>4</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>619</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>620</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>622</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>623</LINE><COLUMN>26</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>620</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>622</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>623</LINE><COLUMN>26</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>620</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>622</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>623</LINE><COLUMN>26</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>625</LINE><COLUMN>11</COLUMN><KEYEVENT><ID>1</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'zCharArr' is an array of 1 elements (2 bytes)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>626</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>626</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>2</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Enter this loop, (assume 'i&lt;zCharVect.size()')</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>628</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>626</LINE><COLUMN>38</COLUMN><KEYEVENT><ID>3</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'i' may equal 1</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>626</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>4</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Continue this loop, (assume 'i&lt;zCharVect.size()')</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>628</LINE><COLUMN>19</COLUMN><KEYEVENT><ID>5</ID><KIND>declaration</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'i' is an In/Out argument to 'std::vector&lt;unsigned short,std::allocator&lt;unsigned short&gt; &gt;::[]' (declared at c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector:1135)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\stephen\code\zebra-zmachine-interpreter\ztext\ztext\</FILEPATH><FILENAME>ztext.cpp</FILENAME><LINE>628</LINE><COLUMN>19</COLUMN><KEYEVENT><ID>6</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>Invalid write to 'zCharArr[1]', (writable range is 0 to 0)</MESSAGE></KEYEVENT></SFA></PATH></DEFECT></DEFECTS>